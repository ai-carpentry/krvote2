[{"path":"https://ai-carpentry.github.io/krvote2/articles/candidate.html","id":"후보자","dir":"Articles","previous_headings":"","what":"후보자","title":"후보자","text":"","code":"get_candidate_info(sgId = \"20220309\", sgTypecode = \"1\") #>    num     sgId sgTypecode    huboid  sggName sdName wiwName giho gihoSangse #> 1    1 20220309          1 100138381 대한민국   전국            1            #> 2    2 20220309          1 100138380 대한민국   전국           10            #> 3    3 20220309          1 100138379 대한민국   전국           11            #> 4    4 20220309          1 100138375 대한민국   전국           12            #> 5    5 20220309          1 100138531 대한민국   전국           13            #> 6    6 20220309          1 100138402 대한민국   전국           14            #> 7    7 20220309          1 100138362 대한민국   전국            2            #> 8    8 20220309          1 100138383 대한민국   전국            3            #> 9    9 20220309          1 100138392 대한민국   전국            4            #> 10  10 20220309          1 100138395 대한민국   전국            5            #>            jdName   name hanjaName gender birthday age addr jobId #> 1    더불어민주당 이재명    李在明     남 19641222  57         75 #> 2  신자유민주연합 김경재    金景梓     남 19421103  79         75 #> 3      우리공화당 조원진    趙源震     남 19590107  63         75 #> 4          진보당 김재연    金在姸     여 19801030  41         75 #> 5      통일한국당 이경희    李京熹     남 19740120  48         75 #> 6      한류연합당 김민찬    金旻澯     남 19580204  64         75 #> 7        국민의힘 윤석열    尹錫悅     남 19601218  61         75 #> 8          정의당 심상정    沈相奵     여 19590220  63         72 #> 9        국민의당 안철수    安哲秀     남 19620122  60         75 #> 10     기본소득당 오준호    吳準鎬     남 19750620  46        225 #>                  job eduId                                          edu #> 1             정당인    68                       중앙대학교 법학과 졸업 #> 2             정당인    68          서울대학교 문리과대학 정치학과 졸업 #> 3             정당인   221      영남대학교 행정대학원 졸업(행정학 석사) #> 4             정당인    68                 한국외국어대학교 노어과 졸업 #> 5    통일한국당 대표   221       한국외국어대학교 대학원 졸업(법학박사) #> 6  한류연합당 당대표   221 원광디지털대학교 자연건강학과 졸업(이학석사) #> 7             정치인   221             서울대학교 대학원 졸업(법학석사) #> 8           국회의원    68        서울대학교 사범대학 사회교육학과 졸업 #> 9             정당인   221             서울대학교 대학원 졸업(의학박사) #> 10              작가    68        서울대학교 인문대학 국어국문학과 졸업 #>                               career1 #> 1                     (전) 경기도지사 #> 2          (전) 제15대, 16대 국회의원 #> 3              (현) 우리공화당 당대표 #> 4                  (전) 19대 국회의원 #> 5           (전) 2002년 서울시장 후보 #> 6        (현) 월드마스터위원회 위원장 #> 7                (전) 제43대 검찰총장 #> 8                    (전) 정의당 대표 #> 9            (전) 19대, 20대 국회의원 #> 10 (현) 기본소득한국네트워크 운영위원 #>                                       career2 status #> 1                               (전) 성남시장   등록 #> 2             (전) 제16대 한국자유총연맹 총재   등록 #> 3  (전) 제18·19·20대 국회의원(대구달서구병)   등록 #> 4                            (현) 진보당 대표   등록 #> 5                     (전) 2017년 대통령 후보   등록 #> 6                 (전) 제19대 대통령선거 후보   등록 #> 7              (전) 서울중앙지방검찰청 검사장   등록 #> 8                               (현) 국회의원   등록 #> 9                        (현) 국민의당 당대표   사퇴 #> 10     (전) 기본소득당 용혜인 국회의원 비서관   등록"},{"path":"https://ai-carpentry.github.io/krvote2/articles/candidate.html","id":"전체-후보자","dir":"Articles","previous_headings":"","what":"전체 후보자","title":"후보자","text":"","code":"get_all_candidate_info(sgId = \"20220309\", sgTypecode = \"1\") #>    num     sgId sgTypecode    huboid  sggName sdName wiwName giho gihoSangse #> 1    1 20220309          1 100138381 대한민국   전국            1            #> 2    2 20220309          1 100138380 대한민국   전국           10            #> 3    3 20220309          1 100138379 대한민국   전국           11            #> 4    4 20220309          1 100138375 대한민국   전국           12            #> 5    5 20220309          1 100138531 대한민국   전국           13            #> 6    6 20220309          1 100138402 대한민국   전국           14            #> 7    7 20220309          1 100138362 대한민국   전국            2            #> 8    8 20220309          1 100138383 대한민국   전국            3            #> 9    9 20220309          1 100138392 대한민국   전국            4            #> 10  10 20220309          1 100138395 대한민국   전국            5            #> 11  11 20220309          1 100138378 대한민국   전국            6            #> 12  12 20220309          1 100138411 대한민국   전국            7            #> 13  13 20220309          1 100138489 대한민국   전국            8            #> 14  14 20220309          1 100138373 대한민국   전국            9            #>            jdName   name hanjaName gender birthday age addr jobId #> 1    더불어민주당 이재명    李在明     남 19641222  57         75 #> 2  신자유민주연합 김경재    金景梓     남 19421103  79         75 #> 3      우리공화당 조원진    趙源震     남 19590107  63         75 #> 4          진보당 김재연    金在姸     여 19801030  41         75 #> 5      통일한국당 이경희    李京熹     남 19740120  48         75 #> 6      한류연합당 김민찬    金旻澯     남 19580204  64         75 #> 7        국민의힘 윤석열    尹錫悅     남 19601218  61         75 #> 8          정의당 심상정    沈相奵     여 19590220  63         72 #> 9        국민의당 안철수    安哲秀     남 19620122  60         75 #> 10     기본소득당 오준호    吳準鎬     남 19750620  46        225 #> 11     국가혁명당 허경영    許京寧     남 19470713  74        225 #> 12         노동당 이백윤    李百允     남 19770525  44        225 #> 13       새누리당 옥은호    玉恩鎬     남 19710710  50         77 #> 14     새로운물결 김동연    金東兗     남 19570128  65         75 #>                  job eduId #> 1             정당인    68 #> 2             정당인    68 #> 3             정당인   221 #> 4             정당인    68 #> 5    통일한국당 대표   221 #> 6  한류연합당 당대표   221 #> 7             정치인   221 #> 8           국회의원    68 #> 9             정당인   221 #> 10              작가    68 #> 11            강연업    68 #> 12            노동자    58 #> 13   (주)아빅스 대표   221 #> 14            정당인   221 #>                                                         edu #> 1                                    중앙대학교 법학과 졸업 #> 2                       서울대학교 문리과대학 정치학과 졸업 #> 3                   영남대학교 행정대학원 졸업(행정학 석사) #> 4                              한국외국어대학교 노어과 졸업 #> 5                    한국외국어대학교 대학원 졸업(법학박사) #> 6              원광디지털대학교 자연건강학과 졸업(이학석사) #> 7                          서울대학교 대학원 졸업(법학석사) #> 8                     서울대학교 사범대학 사회교육학과 졸업 #> 9                          서울대학교 대학원 졸업(의학박사) #> 10                    서울대학교 인문대학 국어국문학과 졸업 #> 11                           한국방송통신대학교 법학과 졸업 #> 12                                                   미기재 #> 13                       서울대학교 대학원 졸업(교육학석사) #> 14 미국 미시간대학교 대학원 졸업(정책학 박사 1989.9-1993.6) #>                                 career1 #> 1                       (전) 경기도지사 #> 2            (전) 제15대, 16대 국회의원 #> 3                (현) 우리공화당 당대표 #> 4                    (전) 19대 국회의원 #> 5             (전) 2002년 서울시장 후보 #> 6          (현) 월드마스터위원회 위원장 #> 7                  (전) 제43대 검찰총장 #> 8                      (전) 정의당 대표 #> 9              (전) 19대, 20대 국회의원 #> 10   (현) 기본소득한국네트워크 운영위원 #> 11  (전) 제15대, 제17대 대통령선거 후보 #> 12 (전) 금속노조 동희오토사내하청지회장 #> 13                 (현) (주)아빅스 대표 #> 14                 (전) 아주대학교 총장 #>                                               career2 status #> 1                                       (전) 성남시장   등록 #> 2                     (전) 제16대 한국자유총연맹 총재   등록 #> 3          (전) 제18·19·20대 국회의원(대구달서구병)   등록 #> 4                                    (현) 진보당 대표   등록 #> 5                             (전) 2017년 대통령 후보   등록 #> 6                         (전) 제19대 대통령선거 후보   등록 #> 7                      (전) 서울중앙지방검찰청 검사장   등록 #> 8                                       (현) 국회의원   등록 #> 9                                (현) 국민의당 당대표   사퇴 #> 10             (전) 기본소득당 용혜인 국회의원 비서관   등록 #> 11                           (현) 국가혁명당 명예대표   등록 #> 12 (현) 산업폐기물매립장감시서산시민단체연대 공동대표   등록 #> 13                     (전) 클린선거시민행동 공동대표   등록 #> 14        (전) 대한민국 경제부총리 겸 기획재정부 장관   사퇴"},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"소개","dir":"Articles","previous_headings":"","what":"소개","title":"krvote2 패키지","text":"krvote2 패키지는 대한민국 중앙선거관리위원회에서 제공하는 선거 관련 데이터를 조회하는 기능을 제공합니다. 먼저 투개표 정보를 필요한 중요 데이터를 가져오기 위해서 API 마스터 코드집이 필요합니다. 선거코드, 구시군코드, 선거구코드, 정당코드, 직업코드, 학력코드 등의 데이터를 확보한 후 후속 작업을 수행할 수 있습니다.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"설치","dir":"Articles","previous_headings":"","what":"설치","title":"krvote2 패키지","text":"krvote2 패키지는 다음 명령을 사용하여 설치할 수 있습니다:","code":"devtools::install_github(\"ai-carpentry/krvote2\")"},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"사용법","dir":"Articles","previous_headings":"","what":"사용법","title":"krvote2 패키지","text":"패키지를 로드하고 공공데이터포털에서 발급받은 API KEY를 사용하여 데이터를 조회할 수 있습니다.","code":"library(krvote2) library(httr) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.0     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.2     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ purrr::%||%()   masks base::%||%() #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(jsonlite) #>  #> Attaching package: 'jsonlite' #>  #> The following object is masked from 'package:purrr': #>  #>     flatten # 서비스 키 설정 service_key <- Sys.getenv(\"DATA_GO_DECODE_KEY\") set_krvote2_key(service_key)  # 함수 사용 elections <- get_elections()"},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"선거코드-조회","dir":"Articles","previous_headings":"사용법","what":"선거코드 조회","title":"krvote2 패키지","text":"선거코드를 조회하려면 get_elections() 함수를 사용합니다:","code":"get_elections() #>    num     sgId                 sgName sgTypecode sgVotedate #> 1    1 19921218      제14대 대통령선거          0   19921218 #> 2    2 19921218             대통령선거          1   19921218 #> 3    3 19960411    제15대 국회의원선거          0   19960411 #> 4    4 19960411           국회의원선거          2   19960411 #> 5    5 19971218      제15대 대통령선거          0   19971218 #> 6    6 19971218             대통령선거          1   19971218 #> 7    7 20000413    제16대 국회의원선거          0   20000413 #> 8    8 20000413           국회의원선거          2   20000413 #> 9    9 20000413   비례대표국회의원선거          7   20000413 #> 10  10 20020613 제3회 전국동시지방선거          0   20020613"},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"구시군코드-조회","dir":"Articles","previous_headings":"사용법","what":"구시군코드 조회","title":"krvote2 패키지","text":"구시군코드를 조회하려면 get_sigungu() 함수를 사용합니다:","code":"get_sigungu(sgId = \"20220309\") #>    num     sgId    wiwName wOrder     sdName #> 1    1 20220309 서울특별시      2            #> 2    2 20220309     종로구      3 서울특별시 #> 3    3 20220309       중구      4 서울특별시 #> 4    4 20220309     용산구      5 서울특별시 #> 5    5 20220309     성동구      6 서울특별시 #> 6    6 20220309     광진구      7 서울특별시 #> 7    7 20220309   동대문구      8 서울특별시 #> 8    8 20220309     중랑구      9 서울특별시 #> 9    9 20220309     성북구     10 서울특별시 #> 10  10 20220309     강북구     11 서울특별시"},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"선거구코드-조회","dir":"Articles","previous_headings":"사용법","what":"선거구코드 조회","title":"krvote2 패키지","text":"선거구코드를 조회하려면 get_constituencies() 함수를 사용합니다:","code":"get_constituencies(sgId = \"20220309\", sgTypecode = \"1\") #>   num     sgId sgTypecode  sggName sdName wiwName sggJungsu sOrder #> 1   1 20220309          1 대한민국   전국                 1      1"},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"정당코드-조회","dir":"Articles","previous_headings":"사용법","what":"정당코드 조회","title":"krvote2 패키지","text":"정당코드를 조회하려면 get_parties() 함수를 사용합니다:","code":"get_parties(sgId = \"20220309\") #>    num     sgId          jdName pOrder #> 1    1 20220309    더불어민주당      1 #> 2    2 20220309        국민의힘      2 #> 3    3 20220309          정의당      3 #> 4    4 20220309        국민의당      4 #> 5    5 20220309      기본소득당      5 #> 6    6 20220309        시대전환      6 #> 7    7 20220309        코리아당      7 #> 8    8 20220309 가자!평화인권당      8 #> 9    9 20220309      가자환경당      9 #> 10  10 20220309      개벽의시대     10"},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"직업코드-조회","dir":"Articles","previous_headings":"사용법","what":"직업코드 조회","title":"krvote2 패키지","text":"직업코드를 조회하려면 get_occupations() 함수를 사용합니다:","code":"get_occupations(sgId = \"20220309\") #>    num     sgId jobId    jobName jOrder #> 1    1 20220309    72   국회의원      1 #> 2    2 20220309    74   지방의원      2 #> 3    3 20220309   226     교육감      3 #> 4    4 20220309   227   교육의원      4 #> 5    5 20220309    75     정치인      6 #> 6    6 20220309    76 농ㆍ축산업      7 #> 7    7 20220309    77       상업      8 #> 8    8 20220309    78     광공업      9 #> 9    9 20220309    79     운수업     10 #> 10  10 20220309    80     수산업     11"},{"path":"https://ai-carpentry.github.io/krvote2/articles/election_code.html","id":"학력코드-조회","dir":"Articles","previous_headings":"사용법","what":"학력코드 조회","title":"krvote2 패키지","text":"학력코드를 조회하려면 get_education_levels() 함수를 사용합니다:","code":"get_education_levels(sgId = \"20220309\") #>    num     sgId eduId    eduName eOrder #> 1    1 20220309    58     미기재      1 #> 2    2 20220309    59 무학(독학)      2 #> 3    3 20220309    60       초퇴      3 #> 4    4 20220309    61       초졸      4 #> 5    5 20220309    71       중재      5 #> 6    6 20220309    62       중퇴      6 #> 7    7 20220309    63       중졸      7 #> 8    8 20220309    70       고재      8 #> 9    9 20220309    64       고퇴      9 #> 10  10 20220309    65       고졸     10"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"소개","dir":"Articles","previous_headings":"","what":"소개","title":"유권자","text":"krvote2 패키지는 대한민국 선거 정보, 특히 선거인수 현황 정보를 쉽게 가져올 수 있도록 도와주는 R 패키지입니다. 이 패키지는 중앙선거관리위원회에서 제공하는 공공 API를 활용하여 다양한 수준의 선거인수 정보를 제공합니다.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"사용-방법","dir":"Articles","previous_headings":"","what":"사용 방법","title":"유권자","text":"먼저 패키지를 로드하고 API 키를 설정합니다. API 키는 DATA.GO.KR에서 발급받을 수 있습니다. 발급받은 API 키는 환경변수로 설정하거나 직접 입력할 수 있습니다.","code":"library(krvote2) library(httr) library(jsonlite)  # 서비스 키 설정 service_key <- Sys.getenv(\"DATA_GO_DECODE_KEY\") set_krvote2_key(service_key)"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"선거구별-선거인수-정보-조회","dir":"Articles","previous_headings":"사용 방법","what":"선거구별 선거인수 정보 조회","title":"유권자","text":"","code":"constituency_voters <- get_constituency_voters(   sgId = \"20200415\",   sgTypecode = \"2\",   sdName = \"서울특별시\" ) head(constituency_voters) #>   num     sgId     sdName      sggName wiwName emdCount tpgCount ppltCnt #> 1   1 20200415 서울특별시         합계    합계      424     2252 9736986 #> 2   2 20200415 서울특별시       종로구    합계       17       43  151296 #> 3   3 20200415 서울특별시       종로구  종로구       17       43  151296 #> 4   4 20200415 서울특별시 중구성동구갑    합계       13       52  217842 #> 5   5 20200415 서울특별시 중구성동구갑  성동구       13       52  217842 #> 6   6 20200415 서울특별시 중구성동구을    합계       19       63  207715 #>   ntabPpltCnt frgnrPpltCnt cfmtnElcnt cfmtnRacnt cfmtnFrgnrCnt cfmtnManElcnt #> 1       29483            0    8465419      25796             0       4088006 #> 2         891            0     134516        778             0         65194 #> 3         891            0     134516        778             0         65194 #> 4         656            0     192161        571             0         94727 #> 5         656            0     192161        571             0         94727 #> 6        1029            0     183779        921             0         88334 #>   cfmtnManRacnt cfmtnManFrgnrCnt cfmtnFmlElcnt cfmtnFmlRacnt cfmtnFmlFrgnrCnt #> 1         10513                0       4377413         15283                0 #> 2           327                0         69322           451                0 #> 3           327                0         69322           451                0 #> 4           226                0         97434           345                0 #> 5           226                0         97434           345                0 #> 6           346                0         95445           575                0 #>   cfmtnRdvtDccnt cfmtnNtabRdvtDccnt cfmtnRdvtManDccnt cfmtnNtabRdvtManDccnt #> 1          12947                  7             10093                     5 #> 2            247                  0               205                     0 #> 3            247                  0               205                     0 #> 4            244                  0               202                     0 #> 5            244                  0               202                     0 #> 6            348                  1               211                     0 #>   cfmtnRdvtFmlDccnt cfmtnNtabRdvtFmlDccnt #> 1              2854                     2 #> 2                42                     0 #> 3                42                     0 #> 4                42                     0 #> 5                42                     0 #> 6               137                     1"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"시도별-선거인수-정보-조회","dir":"Articles","previous_headings":"사용 방법","what":"시도별 선거인수 정보 조회","title":"유권자","text":"","code":"sido_voters <- get_sido_voters(sgId = \"20200415\") head(sido_voters) #>   num     sgId     sdName wiwCount emdCount tpgCount  ppltCnt ntabPpltCnt #> 1   1 20200415       합계      250     3484    14330 51843268       75880 #> 2   2 20200415 서울특별시       25      424     2252  9736986       29483 #> 3   3 20200415 부산광역시       16      205      912  3410199        4207 #> 4   4 20200415 대구광역시        8      139      631  2432827        1862 #> 5   5 20200415 인천광역시       10      154      717  2954295        3996 #> 6   6 20200415 광주광역시        5       95      369  1455861         757 #>   frgnrPpltCnt cfmtnElcnt cfmtnRacnt cfmtnFrgnrCnt cfmtnManElcnt cfmtnManRacnt #> 1            0   43994247      73444             0      21803482         30127 #> 2            0    8477244      28654             0       4093951         11936 #> 3            0    2958290       4092             0       1438850          1517 #> 4            0    2071120       1822             0       1014440           744 #> 5            0    2500690       3867             0       1246898          1583 #> 6            0    1208263        732             0        592217           315 #>   cfmtnManFrgnrCnt cfmtnFmlElcnt cfmtnFmlRacnt cfmtnFmlFrgnrCnt cfmtnRdvtDccnt #> 1                0      22190765         43317                0         100529 #> 2                0       4383293         16718                0          12948 #> 3                0       1519440          2575                0           6709 #> 4                0       1056680          1078                0           3940 #> 5                0       1253792          2284                0           4995 #> 6                0        616046           417                0           2418 #>   cfmtnNtabRdvtDccnt cfmtnRdvtManDccnt cfmtnNtabRdvtManDccnt cfmtnRdvtFmlDccnt #> 1                 19             74614                    12             25915 #> 2                  8             10094                     6              2854 #> 3                  0              5249                     0              1460 #> 4                  0              2867                     0              1073 #> 5                  1              3977                     1              1018 #> 6                  0              1704                     0               714 #>   cfmtnNtabRdvtFmlDccnt #> 1                     7 #> 2                     2 #> 3                     0 #> 4                     0 #> 5                     0 #> 6                     0"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"구시군별-선거인수-정보-조회","dir":"Articles","previous_headings":"사용 방법","what":"구시군별 선거인수 정보 조회","title":"유권자","text":"","code":"sigungu_voters <- get_sigungu_voters(   sgId = \"20200415\",   sdName = \"서울특별시\" ) head(sigungu_voters) #>   num     sgId     sdName wiwName emdCount tpgCount ppltCnt ntabPpltCnt #> 1   1 20200415 서울특별시    합계      424     2252 9736986       29483 #> 2   2 20200415 서울특별시  종로구       17       43  151296         891 #> 3   3 20200415 서울특별시    중구       19       63  207715        1029 #> 4   4 20200415 서울특별시  용산구       16       59  229623        1677 #> 5   5 20200415 서울특별시  성동구       13       52  217842         656 #> 6   6 20200415 서울특별시  광진구       15       84  350610         890 #>   frgnrPpltCnt cfmtnElcnt cfmtnRacnt cfmtnFrgnrCnt cfmtnManElcnt cfmtnManRacnt #> 1            0    8477244      28654             0       4093951         11936 #> 2            0     134989        869             0         65439           375 #> 3            0     184215       1003             0         88562           387 #> 4            0     203883       1642             0         97405           668 #> 5            0     192476        637             0         94890           262 #> 6            0     309447        875             0        148615           366 #>   cfmtnManFrgnrCnt cfmtnFmlElcnt cfmtnFmlRacnt cfmtnFmlFrgnrCnt cfmtnRdvtDccnt #> 1                0       4383293         16718                0          12948 #> 2                0         69550           494                0            247 #> 3                0         95653           616                0            348 #> 4                0        106478           974                0            252 #> 5                0         97586           375                0            244 #> 6                0        160832           509                0            365 #>   cfmtnNtabRdvtDccnt cfmtnRdvtManDccnt cfmtnNtabRdvtManDccnt cfmtnRdvtFmlDccnt #> 1                  8             10094                     6              2854 #> 2                  0               205                     0                42 #> 3                  1               211                     0               137 #> 4                  0               200                     0                52 #> 5                  0               202                     0                42 #> 6                  0               299                     0                66 #>   cfmtnNtabRdvtFmlDccnt #> 1                     2 #> 2                     0 #> 3                     1 #> 4                     0 #> 5                     0 #> 6                     0"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"읍면동별-선거인수-정보-조회","dir":"Articles","previous_headings":"사용 방법","what":"읍면동별 선거인수 정보 조회","title":"유권자","text":"","code":"emd_voters <- get_emd_voters(   sgId = \"20200415\",   sdName = \"서울특별시\",   wiwName = \"종로구\" ) head(emd_voters) #>   num     sgId     sdName wiwName    emdName tpgCount ppltCnt ntabPpltCnt #> 1   1 20200415 서울특별시  종로구       합계       43  151296         891 #> 2   2 20200415 서울특별시  종로구 청운효자동        3   12754          75 #> 3   3 20200415 서울특별시  종로구     사직동        2    9542         111 #> 4   4 20200415 서울특별시  종로구     삼청동        1    2751          18 #> 5   5 20200415 서울특별시  종로구     부암동        3   10157          63 #> 6   6 20200415 서울특별시  종로구     평창동        5   18628         210 #>   frgnrPpltCnt cfmtnElcnt cfmtnRacnt cfmtnFrgnrCnt cfmtnManElcnt cfmtnManRacnt #> 1            0     134989        869             0         65439           375 #> 2            0      11283         71             0          5167            26 #> 3            0       8378        107             0          3741            42 #> 4            0       2477         18             0          1174             6 #> 5            0       8813         63             0          4121            28 #> 6            0      16181        205             0          7476            89 #>   cfmtnManFrgnrCnt cfmtnFmlElcnt cfmtnFmlRacnt cfmtnFmlFrgnrCnt cfmtnRdvtDccnt #> 1                0         69550           494                0            247 #> 2                0          6116            45                0             47 #> 3                0          4637            65                0             15 #> 4                0          1303            12                0              7 #> 5                0          4692            35                0             13 #> 6                0          8705           116                0             19 #>   cfmtnNtabRdvtDccnt cfmtnRdvtManDccnt cfmtnNtabRdvtManDccnt cfmtnRdvtFmlDccnt #> 1                  0               205                     0                42 #> 2                  0                39                     0                 8 #> 3                  0                 8                     0                 7 #> 4                  0                 6                     0                 1 #> 5                  0                12                     0                 1 #> 6                  0                16                     0                 3 #>   cfmtnNtabRdvtFmlDccnt #> 1                     0 #> 2                     0 #> 3                     0 #> 4                     0 #> 5                     0 #> 6                     0"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"투표구별-선거인수-정보-조회","dir":"Articles","previous_headings":"사용 방법","what":"투표구별 선거인수 정보 조회","title":"유권자","text":"","code":"voting_district_voters <- get_voting_district_voters(   sgId = \"20200415\",   sdName = \"서울특별시\",   wiwName = \"종로구\" ) head(voting_district_voters) #>   num     sgId     sdName wiwName    emdName         tpgName ppltCnt #> 1   1 20200415 서울특별시  종로구       합계            합계  151296 #> 2   2 20200415 서울특별시  종로구 청운효자동            합계   12754 #> 3   3 20200415 서울특별시  종로구 청운효자동 청운효자동제1투    4311 #> 4   4 20200415 서울특별시  종로구 청운효자동 청운효자동제2투    4135 #> 5   5 20200415 서울특별시  종로구 청운효자동 청운효자동제3투    4308 #> 6   6 20200415 서울특별시  종로구     사직동            합계    9542 #>   ntabPpltCnt frgnrPpltCnt cfmtnElcnt cfmtnRacnt cfmtnFrgnrCnt cfmtnManElcnt #> 1         891            0     134989        869             0         65439 #> 2          75            0      11283         71             0          5167 #> 3          38            0       3997         34             0          1878 #> 4          20            0       3585         20             0          1632 #> 5          17            0       3701         17             0          1657 #> 6         111            0       8378        107             0          3741 #>   cfmtnManRacnt cfmtnManFrgnrCnt cfmtnFmlElcnt cfmtnFmlRacnt cfmtnFmlFrgnrCnt #> 1           375                0         69550           494                0 #> 2            26                0          6116            45                0 #> 3            12                0          2119            22                0 #> 4             9                0          1953            11                0 #> 5             5                0          2044            12                0 #> 6            42                0          4637            65                0 #>   cfmtnRdvtDccnt cfmtnNtabRdvtDccnt cfmtnRdvtManDccnt cfmtnNtabRdvtManDccnt #> 1            247                  0               205                     0 #> 2             47                  0                39                     0 #> 3              9                  0                 7                     0 #> 4             27                  0                24                     0 #> 5             11                  0                 8                     0 #> 6             15                  0                 8                     0 #>   cfmtnRdvtFmlDccnt cfmtnNtabRdvtFmlDccnt #> 1                42                     0 #> 2                 8                     0 #> 3                 2                     0 #> 4                 3                     0 #> 5                 3                     0 #> 6                 7                     0"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"모든-선거인수-정보-한-번에-조회","dir":"Articles","previous_headings":"사용 방법","what":"모든 선거인수 정보 한 번에 조회","title":"유권자","text":"","code":"all_voters <- get_all_voters(   sgId = \"20200415\",   sgTypecode = \"2\",   sdName = \"서울특별시\",   wiwName = \"종로구\" ) str(all_voters) #> List of 5 #>  $ constituency   :'data.frame': 10 obs. of  25 variables: #>   ..$ num                  : chr [1:10] \"1\" \"2\" \"3\" \"4\" ... #>   ..$ sgId                 : chr [1:10] \"20200415\" \"20200415\" \"20200415\" \"20200415\" ... #>   ..$ sdName               : chr [1:10] \"서울특별시\" \"서울특별시\" \"서울특별시\" \"서울특별시\" ... #>   ..$ sggName              : chr [1:10] \"합계\" \"종로구\" \"종로구\" \"중구성동구갑\" ... #>   ..$ wiwName              : chr [1:10] \"합계\" \"합계\" \"종로구\" \"합계\" ... #>   ..$ emdCount             : chr [1:10] \"424\" \"17\" \"17\" \"13\" ... #>   ..$ tpgCount             : chr [1:10] \"2252\" \"43\" \"43\" \"52\" ... #>   ..$ ppltCnt              : chr [1:10] \"9736986\" \"151296\" \"151296\" \"217842\" ... #>   ..$ ntabPpltCnt          : chr [1:10] \"29483\" \"891\" \"891\" \"656\" ... #>   ..$ frgnrPpltCnt         : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnElcnt           : chr [1:10] \"8465419\" \"134516\" \"134516\" \"192161\" ... #>   ..$ cfmtnRacnt           : chr [1:10] \"25796\" \"778\" \"778\" \"571\" ... #>   ..$ cfmtnFrgnrCnt        : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnManElcnt        : chr [1:10] \"4088006\" \"65194\" \"65194\" \"94727\" ... #>   ..$ cfmtnManRacnt        : chr [1:10] \"10513\" \"327\" \"327\" \"226\" ... #>   ..$ cfmtnManFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnFmlElcnt        : chr [1:10] \"4377413\" \"69322\" \"69322\" \"97434\" ... #>   ..$ cfmtnFmlRacnt        : chr [1:10] \"15283\" \"451\" \"451\" \"345\" ... #>   ..$ cfmtnFmlFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtDccnt       : chr [1:10] \"12947\" \"247\" \"247\" \"244\" ... #>   ..$ cfmtnNtabRdvtDccnt   : chr [1:10] \"7\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtManDccnt    : chr [1:10] \"10093\" \"205\" \"205\" \"202\" ... #>   ..$ cfmtnNtabRdvtManDccnt: chr [1:10] \"5\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtFmlDccnt    : chr [1:10] \"2854\" \"42\" \"42\" \"42\" ... #>   ..$ cfmtnNtabRdvtFmlDccnt: chr [1:10] \"2\" \"0\" \"0\" \"0\" ... #>  $ sido           :'data.frame': 10 obs. of  24 variables: #>   ..$ num                  : chr [1:10] \"1\" \"2\" \"3\" \"4\" ... #>   ..$ sgId                 : chr [1:10] \"20200415\" \"20200415\" \"20200415\" \"20200415\" ... #>   ..$ sdName               : chr [1:10] \"합계\" \"서울특별시\" \"부산광역시\" \"대구광역시\" ... #>   ..$ wiwCount             : chr [1:10] \"250\" \"25\" \"16\" \"8\" ... #>   ..$ emdCount             : chr [1:10] \"3484\" \"424\" \"205\" \"139\" ... #>   ..$ tpgCount             : chr [1:10] \"14330\" \"2252\" \"912\" \"631\" ... #>   ..$ ppltCnt              : chr [1:10] \"51843268\" \"9736986\" \"3410199\" \"2432827\" ... #>   ..$ ntabPpltCnt          : chr [1:10] \"75880\" \"29483\" \"4207\" \"1862\" ... #>   ..$ frgnrPpltCnt         : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnElcnt           : chr [1:10] \"43994247\" \"8477244\" \"2958290\" \"2071120\" ... #>   ..$ cfmtnRacnt           : chr [1:10] \"73444\" \"28654\" \"4092\" \"1822\" ... #>   ..$ cfmtnFrgnrCnt        : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnManElcnt        : chr [1:10] \"21803482\" \"4093951\" \"1438850\" \"1014440\" ... #>   ..$ cfmtnManRacnt        : chr [1:10] \"30127\" \"11936\" \"1517\" \"744\" ... #>   ..$ cfmtnManFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnFmlElcnt        : chr [1:10] \"22190765\" \"4383293\" \"1519440\" \"1056680\" ... #>   ..$ cfmtnFmlRacnt        : chr [1:10] \"43317\" \"16718\" \"2575\" \"1078\" ... #>   ..$ cfmtnFmlFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtDccnt       : chr [1:10] \"100529\" \"12948\" \"6709\" \"3940\" ... #>   ..$ cfmtnNtabRdvtDccnt   : chr [1:10] \"19\" \"8\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtManDccnt    : chr [1:10] \"74614\" \"10094\" \"5249\" \"2867\" ... #>   ..$ cfmtnNtabRdvtManDccnt: chr [1:10] \"12\" \"6\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtFmlDccnt    : chr [1:10] \"25915\" \"2854\" \"1460\" \"1073\" ... #>   ..$ cfmtnNtabRdvtFmlDccnt: chr [1:10] \"7\" \"2\" \"0\" \"0\" ... #>  $ sigungu        :'data.frame': 10 obs. of  24 variables: #>   ..$ num                  : chr [1:10] \"1\" \"2\" \"3\" \"4\" ... #>   ..$ sgId                 : chr [1:10] \"20200415\" \"20200415\" \"20200415\" \"20200415\" ... #>   ..$ sdName               : chr [1:10] \"서울특별시\" \"서울특별시\" \"서울특별시\" \"서울특별시\" ... #>   ..$ wiwName              : chr [1:10] \"합계\" \"종로구\" \"중구\" \"용산구\" ... #>   ..$ emdCount             : chr [1:10] \"424\" \"17\" \"19\" \"16\" ... #>   ..$ tpgCount             : chr [1:10] \"2252\" \"43\" \"63\" \"59\" ... #>   ..$ ppltCnt              : chr [1:10] \"9736986\" \"151296\" \"207715\" \"229623\" ... #>   ..$ ntabPpltCnt          : chr [1:10] \"29483\" \"891\" \"1029\" \"1677\" ... #>   ..$ frgnrPpltCnt         : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnElcnt           : chr [1:10] \"8477244\" \"134989\" \"184215\" \"203883\" ... #>   ..$ cfmtnRacnt           : chr [1:10] \"28654\" \"869\" \"1003\" \"1642\" ... #>   ..$ cfmtnFrgnrCnt        : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnManElcnt        : chr [1:10] \"4093951\" \"65439\" \"88562\" \"97405\" ... #>   ..$ cfmtnManRacnt        : chr [1:10] \"11936\" \"375\" \"387\" \"668\" ... #>   ..$ cfmtnManFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnFmlElcnt        : chr [1:10] \"4383293\" \"69550\" \"95653\" \"106478\" ... #>   ..$ cfmtnFmlRacnt        : chr [1:10] \"16718\" \"494\" \"616\" \"974\" ... #>   ..$ cfmtnFmlFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtDccnt       : chr [1:10] \"12948\" \"247\" \"348\" \"252\" ... #>   ..$ cfmtnNtabRdvtDccnt   : chr [1:10] \"8\" \"0\" \"1\" \"0\" ... #>   ..$ cfmtnRdvtManDccnt    : chr [1:10] \"10094\" \"205\" \"211\" \"200\" ... #>   ..$ cfmtnNtabRdvtManDccnt: chr [1:10] \"6\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtFmlDccnt    : chr [1:10] \"2854\" \"42\" \"137\" \"52\" ... #>   ..$ cfmtnNtabRdvtFmlDccnt: chr [1:10] \"2\" \"0\" \"1\" \"0\" ... #>  $ emd            :'data.frame': 10 obs. of  24 variables: #>   ..$ num                  : chr [1:10] \"1\" \"2\" \"3\" \"4\" ... #>   ..$ sgId                 : chr [1:10] \"20200415\" \"20200415\" \"20200415\" \"20200415\" ... #>   ..$ sdName               : chr [1:10] \"서울특별시\" \"서울특별시\" \"서울특별시\" \"서울특별시\" ... #>   ..$ wiwName              : chr [1:10] \"종로구\" \"종로구\" \"종로구\" \"종로구\" ... #>   ..$ emdName              : chr [1:10] \"합계\" \"청운효자동\" \"사직동\" \"삼청동\" ... #>   ..$ tpgCount             : chr [1:10] \"43\" \"3\" \"2\" \"1\" ... #>   ..$ ppltCnt              : chr [1:10] \"151296\" \"12754\" \"9542\" \"2751\" ... #>   ..$ ntabPpltCnt          : chr [1:10] \"891\" \"75\" \"111\" \"18\" ... #>   ..$ frgnrPpltCnt         : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnElcnt           : chr [1:10] \"134989\" \"11283\" \"8378\" \"2477\" ... #>   ..$ cfmtnRacnt           : chr [1:10] \"869\" \"71\" \"107\" \"18\" ... #>   ..$ cfmtnFrgnrCnt        : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnManElcnt        : chr [1:10] \"65439\" \"5167\" \"3741\" \"1174\" ... #>   ..$ cfmtnManRacnt        : chr [1:10] \"375\" \"26\" \"42\" \"6\" ... #>   ..$ cfmtnManFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnFmlElcnt        : chr [1:10] \"69550\" \"6116\" \"4637\" \"1303\" ... #>   ..$ cfmtnFmlRacnt        : chr [1:10] \"494\" \"45\" \"65\" \"12\" ... #>   ..$ cfmtnFmlFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtDccnt       : chr [1:10] \"247\" \"47\" \"15\" \"7\" ... #>   ..$ cfmtnNtabRdvtDccnt   : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtManDccnt    : chr [1:10] \"205\" \"39\" \"8\" \"6\" ... #>   ..$ cfmtnNtabRdvtManDccnt: chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtFmlDccnt    : chr [1:10] \"42\" \"8\" \"7\" \"1\" ... #>   ..$ cfmtnNtabRdvtFmlDccnt: chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>  $ voting_district:'data.frame': 10 obs. of  24 variables: #>   ..$ num                  : chr [1:10] \"1\" \"2\" \"3\" \"4\" ... #>   ..$ sgId                 : chr [1:10] \"20200415\" \"20200415\" \"20200415\" \"20200415\" ... #>   ..$ sdName               : chr [1:10] \"서울특별시\" \"서울특별시\" \"서울특별시\" \"서울특별시\" ... #>   ..$ wiwName              : chr [1:10] \"종로구\" \"종로구\" \"종로구\" \"종로구\" ... #>   ..$ emdName              : chr [1:10] \"합계\" \"청운효자동\" \"청운효자동\" \"청운효자동\" ... #>   ..$ tpgName              : chr [1:10] \"합계\" \"합계\" \"청운효자동제1투\" \"청운효자동제2투\" ... #>   ..$ ppltCnt              : chr [1:10] \"151296\" \"12754\" \"4311\" \"4135\" ... #>   ..$ ntabPpltCnt          : chr [1:10] \"891\" \"75\" \"38\" \"20\" ... #>   ..$ frgnrPpltCnt         : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnElcnt           : chr [1:10] \"134989\" \"11283\" \"3997\" \"3585\" ... #>   ..$ cfmtnRacnt           : chr [1:10] \"869\" \"71\" \"34\" \"20\" ... #>   ..$ cfmtnFrgnrCnt        : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnManElcnt        : chr [1:10] \"65439\" \"5167\" \"1878\" \"1632\" ... #>   ..$ cfmtnManRacnt        : chr [1:10] \"375\" \"26\" \"12\" \"9\" ... #>   ..$ cfmtnManFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnFmlElcnt        : chr [1:10] \"69550\" \"6116\" \"2119\" \"1953\" ... #>   ..$ cfmtnFmlRacnt        : chr [1:10] \"494\" \"45\" \"22\" \"11\" ... #>   ..$ cfmtnFmlFrgnrCnt     : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtDccnt       : chr [1:10] \"247\" \"47\" \"9\" \"27\" ... #>   ..$ cfmtnNtabRdvtDccnt   : chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtManDccnt    : chr [1:10] \"205\" \"39\" \"7\" \"24\" ... #>   ..$ cfmtnNtabRdvtManDccnt: chr [1:10] \"0\" \"0\" \"0\" \"0\" ... #>   ..$ cfmtnRdvtFmlDccnt    : chr [1:10] \"42\" \"8\" \"2\" \"3\" ... #>   ..$ cfmtnNtabRdvtFmlDccnt: chr [1:10] \"0\" \"0\" \"0\" \"0\" ..."},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"주의사항","dir":"Articles","previous_headings":"","what":"주의사항","title":"유권자","text":"API 사용량 제한이 있을 수 있으므로, 대량의 데이터를 가져올 때는 주의가 필요합니다. 선거 ID(sgId)와 선거종류코드(sgTypecode)는 중앙선거관리위원회의 기준을 따릅니다. 정확한 값을 사용해야 합니다. 일부 함수는 특정 매개변수가 필요할 수 있습니다. 예를 들어, get_constituency_voters()는 sgTypecode가 필요합니다.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/articles/voters.html","id":"결론","dir":"Articles","previous_headings":"","what":"결론","title":"유권자","text":"krvote2 패키지를 사용하면 대한민국의 선거인수 현황 정보를 쉽고 효율적으로 가져올 수 있습니다. 이 정보는 선거 분석, 인구통계 연구, 정책 결정 등 다양한 분야에서 활용될 수 있습니다.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/articles/voting_counting.html","id":"투표","dir":"Articles","previous_headings":"","what":"투표","title":"투개표","text":"","code":"get_vote_info(sgId = \"20220309\", sgTypecode = \"1\") #>    num     sgId sgTypecode     sdName  wiwName totSunsu  psSunsu psEtcSunsu #> 1    1 20220309          1       합계     합계 44197692 27540762   16656930 #> 2    2 20220309          1 서울특별시     합계  8346647  5151633    3195014 #> 3    3 20220309          1 서울특별시   종로구   129968    74848      55120 #> 4    4 20220309          1 서울특별시     중구   111448    67560      43888 #> 5    5 20220309          1 서울특별시   용산구   199077   120179      78898 #> 6    6 20220309          1 서울특별시   성동구   252087   154998      97089 #> 7    7 20220309          1 서울특별시   광진구   303582   185922     117660 #> 8    8 20220309          1 서울특별시 동대문구   300928   191891     109037 #> 9    9 20220309          1 서울특별시   중랑구   347108   218838     128270 #> 10  10 20220309          1 서울특별시   성북구   375880   226017     149863 #>     totTusu   psTusu psEtcTusu turnout vrOrder #> 1  34067853 17485029  16582824    77.1       1 #> 2   6501831  3328090   3173741    77.9       2 #> 3    100629    46010     54619    77.4       3 #> 4     84998    41582     43416    76.3       4 #> 5    152068    74093     77975    76.4       5 #> 6    197240   100822     96418    78.2       6 #> 7    235471   118484    116987    77.6       7 #> 8    232106   123748    108358    77.1       8 #> 9    260862   133148    127714    75.2       9 #> 10   292187   143209    148978    77.7      10"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voting_counting.html","id":"전체-투표","dir":"Articles","previous_headings":"투표","what":"전체 투표","title":"투개표","text":"","code":"votes_df <- get_all_vote_info(sgId = \"20220309\", sgTypecode = \"1\")  votes_df |>    as_tibble() #> # A tibble: 268 × 13 #>    num   sgId     sgTypecode sdName  wiwName totSunsu psSunsu psEtcSunsu totTusu #>    <chr> <chr>    <chr>      <chr>   <chr>   <chr>    <chr>   <chr>      <chr>   #>  1 1     20220309 1          합계    합계    44197692 275407… 16656930   340678… #>  2 2     20220309 1          서울특… 합계    8346647  5151633 3195014    6501831 #>  3 3     20220309 1          서울특… 종로구  129968   74848   55120      100629  #>  4 4     20220309 1          서울특… 중구    111448   67560   43888      84998   #>  5 5     20220309 1          서울특… 용산구  199077   120179  78898      152068  #>  6 6     20220309 1          서울특… 성동구  252087   154998  97089      197240  #>  7 7     20220309 1          서울특… 광진구  303582   185922  117660     235471  #>  8 8     20220309 1          서울특… 동대문… 300928   191891  109037     232106  #>  9 9     20220309 1          서울특… 중랑구  347108   218838  128270     260862  #> 10 10    20220309 1          서울특… 성북구  375880   226017  149863     292187  #> # ℹ 258 more rows #> # ℹ 4 more variables: psTusu <chr>, psEtcTusu <chr>, turnout <chr>, #> #   vrOrder <chr>"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voting_counting.html","id":"개표","dir":"Articles","previous_headings":"","what":"개표","title":"투개표","text":"","code":"get_count_info(sgId = \"20220309\", sgTypecode = \"1\") #>    num     sgId sgTypecode  sggName     sdName  wiwName    sunsu     tusu #> 1    1 20220309          1 대한민국       합계     합계 44197692 34067853 #> 2    2 20220309          1 대한민국 서울특별시     합계  8346647  6501831 #> 3    3 20220309          1 대한민국 서울특별시   종로구   129968   100629 #> 4    4 20220309          1 대한민국 서울특별시     중구   111448    84998 #> 5    5 20220309          1 대한민국 서울특별시   용산구   199077   152068 #> 6    6 20220309          1 대한민국 서울특별시   성동구   252087   197240 #> 7    7 20220309          1 대한민국 서울특별시   광진구   303582   235471 #> 8    8 20220309          1 대한민국 서울특별시 동대문구   300928   232106 #> 9    9 20220309          1 대한민국 서울특별시   중랑구   347108   260862 #> 10  10 20220309          1 대한민국 서울특별시   성북구   375880   292187 #>      yutusu mutusu gigwonsu         jd01     jd02   jd03       jd04       jd05 #> 1  33760311 307542 10129839 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 2   6439139  62692  1844816 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 3     99366   1263    29339 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 4     84184    814    26450 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 5    150682   1386    47009 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 6    195238   2002    54847 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 7    232918   2553    68111 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 8    229637   2469    68822 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 9    258423   2439    86246 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #> 10   289359   2828    83693 더불어민주당 국민의힘 정의당 기본소득당 국가혁명당 #>      jd06     jd07           jd08       jd09   jd10       jd11       jd12 jd13 #> 1  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 2  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 3  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 4  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 5  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 6  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 7  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 8  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 9  노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #> 10 노동당 새누리당 신자유민주연합 우리공화당 진보당 통일한국당 한류연합당      #>    jd14 jd15 jd16 jd17 jd18 jd19 jd20 jd21 jd22 jd23 jd24 jd25 jd26 jd27 jd28 #> 1                                                                             #> 2                                                                             #> 3                                                                             #> 4                                                                             #> 5                                                                             #> 6                                                                             #> 7                                                                             #> 8                                                                             #> 9                                                                             #> 10                                                                            #>    jd29 jd30 jd31 jd32 jd33 jd34 jd35 jd36 jd37 jd38 jd39 jd40 jd41 jd42 jd43 #> 1                                                                             #> 2                                                                             #> 3                                                                             #> 4                                                                             #> 5                                                                             #> 6                                                                             #> 7                                                                             #> 8                                                                             #> 9                                                                             #> 10                                                                            #>    jd44 jd45 jd46 jd47 jd48 jd49 jd50  hbj01  hbj02  hbj03  hbj04  hbj05  hbj06 #> 1                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 2                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 3                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 4                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 5                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 6                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 7                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 8                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 9                                     이재명 윤석열 심상정 오준호 허경영 이백윤 #> 10                                    이재명 윤석열 심상정 오준호 허경영 이백윤 #>     hbj07  hbj08  hbj09  hbj10  hbj11  hbj12 hbj13 hbj14 hbj15 hbj16 hbj17 #> 1  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 2  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 3  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 4  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 5  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 6  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 7  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 8  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 9  옥은호 김경재 조원진 김재연 이경희 김민찬                               #> 10 옥은호 김경재 조원진 김재연 이경희 김민찬                               #>    hbj18 hbj19 hbj20 hbj21 hbj22 hbj23 hbj24 hbj25 hbj26 hbj27 hbj28 hbj29 #> 1                                                                          #> 2                                                                          #> 3                                                                          #> 4                                                                          #> 5                                                                          #> 6                                                                          #> 7                                                                          #> 8                                                                          #> 9                                                                          #> 10                                                                         #>    hbj30 hbj31 hbj32 hbj33 hbj34 hbj35 hbj36 hbj37 hbj38 hbj39 hbj40 hbj41 #> 1                                                                          #> 2                                                                          #> 3                                                                          #> 4                                                                          #> 5                                                                          #> 6                                                                          #> 7                                                                          #> 8                                                                          #> 9                                                                          #> 10                                                                         #>    hbj42 hbj43 hbj44 hbj45 hbj46 hbj47 hbj48 hbj49 hbj50  dugsu01  dugsu02 #> 1                                                        16147738 16394815 #> 2                                                         2944981  3255747 #> 3                                                           46130    49172 #> 4                                                           38244    42906 #> 5                                                           60063    85047 #> 6                                                           84411   103880 #> 7                                                          109922   113733 #> 8                                                          108171   112890 #> 9                                                          130381   118201 #> 10                                                         142702   135044 #>    dugsu03 dugsu04 dugsu05 dugsu06 dugsu07 dugsu08 dugsu09 dugsu10 dugsu11 #> 1   803358   18105  281481    9176    4970    8317   25972   37366   11708 #> 2   180324    3829   36540    1571     844    1791    4657    5615    1333 #> 3     3115      53     558      42       9      50      82     105      20 #> 4     2310      46     463      19      10      17      67      57      17 #> 5     4374      67     755      37      24      56      86     100      27 #> 6     5365     123     969      50      20      47     122     152      34 #> 7     7072     155    1416      52      36      62     180     172      38 #> 8     6416     151    1304      44      32      55     184     232      80 #> 9     6899     156    1961      59      30      73     236     292      60 #> 10    8952     169    1632      99      36      89     202     278      69 #>    dugsu12 dugsu13 dugsu14 dugsu15 dugsu16 dugsu17 dugsu18 dugsu19 dugsu20 #> 1    17305       0       0       0       0       0       0       0       0 #> 2     1907       0       0       0       0       0       0       0       0 #> 3       30       0       0       0       0       0       0       0       0 #> 4       28       0       0       0       0       0       0       0       0 #> 5       46       0       0       0       0       0       0       0       0 #> 6       65       0       0       0       0       0       0       0       0 #> 7       80       0       0       0       0       0       0       0       0 #> 8       78       0       0       0       0       0       0       0       0 #> 9       75       0       0       0       0       0       0       0       0 #> 10      87       0       0       0       0       0       0       0       0 #>    dugsu21 dugsu22 dugsu23 dugsu24 dugsu25 dugsu26 dugsu27 dugsu28 dugsu29 #> 1        0       0       0       0       0       0       0       0       0 #> 2        0       0       0       0       0       0       0       0       0 #> 3        0       0       0       0       0       0       0       0       0 #> 4        0       0       0       0       0       0       0       0       0 #> 5        0       0       0       0       0       0       0       0       0 #> 6        0       0       0       0       0       0       0       0       0 #> 7        0       0       0       0       0       0       0       0       0 #> 8        0       0       0       0       0       0       0       0       0 #> 9        0       0       0       0       0       0       0       0       0 #> 10       0       0       0       0       0       0       0       0       0 #>    dugsu30 dugsu31 dugsu32 dugsu33 dugsu34 dugsu35 dugsu36 dugsu37 dugsu38 #> 1        0       0       0       0       0       0       0       0       0 #> 2        0       0       0       0       0       0       0       0       0 #> 3        0       0       0       0       0       0       0       0       0 #> 4        0       0       0       0       0       0       0       0       0 #> 5        0       0       0       0       0       0       0       0       0 #> 6        0       0       0       0       0       0       0       0       0 #> 7        0       0       0       0       0       0       0       0       0 #> 8        0       0       0       0       0       0       0       0       0 #> 9        0       0       0       0       0       0       0       0       0 #> 10       0       0       0       0       0       0       0       0       0 #>    dugsu39 dugsu40 dugsu41 dugsu42 dugsu43 dugsu44 dugsu45 dugsu46 dugsu47 #> 1        0       0       0       0       0       0       0       0       0 #> 2        0       0       0       0       0       0       0       0       0 #> 3        0       0       0       0       0       0       0       0       0 #> 4        0       0       0       0       0       0       0       0       0 #> 5        0       0       0       0       0       0       0       0       0 #> 6        0       0       0       0       0       0       0       0       0 #> 7        0       0       0       0       0       0       0       0       0 #> 8        0       0       0       0       0       0       0       0       0 #> 9        0       0       0       0       0       0       0       0       0 #> 10       0       0       0       0       0       0       0       0       0 #>    dugsu48 dugsu49 dugsu50 crOrder #> 1        0       0       0       1 #> 2        0       0       0       2 #> 3        0       0       0       3 #> 4        0       0       0       4 #> 5        0       0       0       5 #> 6        0       0       0       6 #> 7        0       0       0       7 #> 8        0       0       0       8 #> 9        0       0       0       9 #> 10       0       0       0      10"},{"path":"https://ai-carpentry.github.io/krvote2/articles/voting_counting.html","id":"전체-투표-1","dir":"Articles","previous_headings":"개표","what":"전체 투표","title":"투개표","text":"","code":"count_df <- get_all_count_info(sgId = \"20220309\", sgTypecode = \"1\")  count_df |>    as_tibble() #> # A tibble: 268 × 162 #>    num   sgId     sgTypecode sggName  sdName  wiwName  sunsu tusu  yutusu mutusu #>    <chr> <chr>    <chr>      <chr>    <chr>   <chr>    <chr> <chr> <chr>  <chr>  #>  1 1     20220309 1          대한민국 합계    합계     4419… 3406… 33760… 307542 #>  2 2     20220309 1          대한민국 서울특… 합계     8346… 6501… 64391… 62692  #>  3 3     20220309 1          대한민국 서울특… 종로구   1299… 1006… 99366  1263   #>  4 4     20220309 1          대한민국 서울특… 중구     1114… 84998 84184  814    #>  5 5     20220309 1          대한민국 서울특… 용산구   1990… 1520… 150682 1386   #>  6 6     20220309 1          대한민국 서울특… 성동구   2520… 1972… 195238 2002   #>  7 7     20220309 1          대한민국 서울특… 광진구   3035… 2354… 232918 2553   #>  8 8     20220309 1          대한민국 서울특… 동대문구 3009… 2321… 229637 2469   #>  9 9     20220309 1          대한민국 서울특… 중랑구   3471… 2608… 258423 2439   #> 10 10    20220309 1          대한민국 서울특… 성북구   3758… 2921… 289359 2828   #> # ℹ 258 more rows #> # ℹ 152 more variables: gigwonsu <chr>, jd01 <chr>, jd02 <chr>, jd03 <chr>, #> #   jd04 <chr>, jd05 <chr>, jd06 <chr>, jd07 <chr>, jd08 <chr>, jd09 <chr>, #> #   jd10 <chr>, jd11 <chr>, jd12 <chr>, jd13 <chr>, jd14 <chr>, jd15 <chr>, #> #   jd16 <chr>, jd17 <chr>, jd18 <chr>, jd19 <chr>, jd20 <chr>, jd21 <chr>, #> #   jd22 <chr>, jd23 <chr>, jd24 <chr>, jd25 <chr>, jd26 <chr>, jd27 <chr>, #> #   jd28 <chr>, jd29 <chr>, jd30 <chr>, jd31 <chr>, jd32 <chr>, jd33 <chr>, …"},{"path":"https://ai-carpentry.github.io/krvote2/articles/winner.html","id":"당선자-정보","dir":"Articles","previous_headings":"","what":"당선자 정보","title":"당선자","text":"","code":"service_key <- Sys.getenv(\"DATA_GO_DECODE_KEY\")  get_winner_info(sgId = \"20220309\", sgTypecode = \"1\") #>   num     sgId sgTypecode    huboid  sggName sdName wiwName giho gihoSangse #> 1   1 20220309          1 100138362 대한민국   전국            2            #>     jdName   name hanjaName gender birthday age                         addr #> 1 국민의힘 윤석열    尹錫悅     남 19601218  61 서울특별시 서초구 서초중앙로 #>   jobId    job eduId                              edu              career1 #> 1    75 정치인   221 서울대학교 대학원 졸업(법학석사) (전) 제43대 검찰총장 #>                          career2    dugsu dugyul #> 1 (전) 서울중앙지방검찰청 검사장 16394815  48.56"},{"path":"https://ai-carpentry.github.io/krvote2/articles/winner.html","id":"전체-당선인-정보","dir":"Articles","previous_headings":"","what":"전체 당선인 정보","title":"당선자","text":"","code":"get_all_winner_info(sgId = \"20220309\", sgTypecode = \"1\") #>   num     sgId sgTypecode    huboid  sggName sdName wiwName giho gihoSangse #> 1   1 20220309          1 100138362 대한민국   전국            2            #>     jdName   name hanjaName gender birthday age                         addr #> 1 국민의힘 윤석열    尹錫悅     남 19601218  61 서울특별시 서초구 서초중앙로 #>   jobId    job eduId                              edu              career1 #> 1    75 정치인   221 서울대학교 대학원 졸업(법학석사) (전) 제43대 검찰총장 #>                          career2    dugsu dugyul #> 1 (전) 서울중앙지방검찰청 검사장 16394815  48.56"},{"path":"https://ai-carpentry.github.io/krvote2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kwangchun Lee. Author, maintainer.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lee K (2024). krvote2: Korea Election Datasets. R package version 0.0.1.9001.","code":"@Manual{,   title = {krvote2: Korea Election Datasets},   author = {Kwangchun Lee},   year = {2024},   note = {R package version 0.0.1.9001}, }"},{"path":"https://ai-carpentry.github.io/krvote2/index.html","id":"krvote2","dir":"","previous_headings":"","what":"Korea Election Datasets","title":"Korea Election Datasets","text":"krvote2 패키지는 대한민국 중앙선거관리위원회에서 제공하는 선거 관련 데이터를 조회하고 분석하는 기능을 제공합니다.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/index.html","id":"설치-방법","dir":"","previous_headings":"","what":"설치 방법","title":"Korea Election Datasets","text":"GitHub에서 krvote2의 개발 버전을 설치할 수 있습니다:","code":"# install.packages(\"devtools\") devtools::install_github(\"ai-carpentry/krvote2\")"},{"path":"https://ai-carpentry.github.io/krvote2/index.html","id":"사용-예제","dir":"","previous_headings":"","what":"사용 예제","title":"Korea Election Datasets","text":"선거코드 데이터를 조회하는 기본적인 예제입니다:","code":"library(krvote2) library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.0     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.2     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ purrr::%||%()   masks base::%||%() #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(httr) library(jsonlite) #>  #> Attaching package: 'jsonlite' #>  #> The following object is masked from 'package:purrr': #>  #>     flatten getCommonSgCodeList(serviceKey = Sys.getenv(\"DATA_GO_DECODE_KEY\")) #>    num     sgId                 sgName sgTypecode sgVotedate #> 1    1 19921218      제14대 대통령선거          0   19921218 #> 2    2 19921218             대통령선거          1   19921218 #> 3    3 19960411    제15대 국회의원선거          0   19960411 #> 4    4 19960411           국회의원선거          2   19960411 #> 5    5 19971218      제15대 대통령선거          0   19971218 #> 6    6 19971218             대통령선거          1   19971218 #> 7    7 20000413    제16대 국회의원선거          0   20000413 #> 8    8 20000413           국회의원선거          2   20000413 #> 9    9 20000413   비례대표국회의원선거          7   20000413 #> 10  10 20020613 제3회 전국동시지방선거          0   20020613"},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ai-carpentry.github.io/krvote2/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_candidate_info.html","id":null,"dir":"Reference","previous_headings":"","what":"모든 후보자 정보 조회 — get_all_candidate_info","title":"모든 후보자 정보 조회 — get_all_candidate_info","text":"모든 후보자 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_candidate_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"모든 후보자 정보 조회 — get_all_candidate_info","text":"","code":"get_all_candidate_info(sgId, sgTypecode, sggName = NULL, sdName = NULL)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_candidate_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"모든 후보자 정보 조회 — get_all_candidate_info","text":"sgId 선거ID sgTypecode 선거종류코드 sggName 선거구명 (옵션) sdName 시도명 (옵션)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_candidate_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"모든 후보자 정보 조회 — get_all_candidate_info","text":"모든 후보자 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_candidate_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"모든 후보자 정보 조회 — get_all_candidate_info","text":"","code":"get_all_candidate_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_constituencies.html","id":null,"dir":"Reference","previous_headings":"","what":"전체 선거구 목록 조회 — get_all_constituencies","title":"전체 선거구 목록 조회 — get_all_constituencies","text":"전체 선거구 목록 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_constituencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"전체 선거구 목록 조회 — get_all_constituencies","text":"","code":"get_all_constituencies(sgId, sgTypecode)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_constituencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"전체 선거구 목록 조회 — get_all_constituencies","text":"sgId 선거ID sgTypecode 선거종류코드","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_constituencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"전체 선거구 목록 조회 — get_all_constituencies","text":"모든 선거구 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_constituencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"전체 선거구 목록 조회 — get_all_constituencies","text":"","code":"get_all_constituencies(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_count_info.html","id":null,"dir":"Reference","previous_headings":"","what":"모든 개표결과 조회 — get_all_count_info","title":"모든 개표결과 조회 — get_all_count_info","text":"모든 개표결과 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_count_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"모든 개표결과 조회 — get_all_count_info","text":"","code":"get_all_count_info(   sgId,   sgTypecode,   sggName = NULL,   sdName = NULL,   wiwName = NULL )"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_count_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"모든 개표결과 조회 — get_all_count_info","text":"sgId 선거ID sgTypecode 선거종류코드 sggName 선거구명 (옵션) sdName 시도명 (옵션) wiwName 구시군명 (옵션)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_count_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"모든 개표결과 조회 — get_all_count_info","text":"모든 개표결과 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_count_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"모든 개표결과 조회 — get_all_count_info","text":"","code":"get_all_count_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_elections.html","id":null,"dir":"Reference","previous_headings":"","what":"전체 선거 목록 조회 — get_all_elections","title":"전체 선거 목록 조회 — get_all_elections","text":"전체 선거 목록 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_elections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"전체 선거 목록 조회 — get_all_elections","text":"","code":"get_all_elections()"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_elections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"전체 선거 목록 조회 — get_all_elections","text":"모든 선거 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_elections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"전체 선거 목록 조회 — get_all_elections","text":"","code":"get_all_elections() #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_preliminary_candidate_info.html","id":null,"dir":"Reference","previous_headings":"","what":"모든 예비후보자 정보 조회 — get_all_preliminary_candidate_info","title":"모든 예비후보자 정보 조회 — get_all_preliminary_candidate_info","text":"모든 예비후보자 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_preliminary_candidate_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"모든 예비후보자 정보 조회 — get_all_preliminary_candidate_info","text":"","code":"get_all_preliminary_candidate_info(   sgId,   sgTypecode,   sggName = NULL,   sdName = NULL )"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_preliminary_candidate_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"모든 예비후보자 정보 조회 — get_all_preliminary_candidate_info","text":"sgId 선거ID sgTypecode 선거종류코드 sggName 선거구명 (옵션) sdName 시도명 (옵션)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_preliminary_candidate_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"모든 예비후보자 정보 조회 — get_all_preliminary_candidate_info","text":"모든 예비후보자 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_preliminary_candidate_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"모든 예비후보자 정보 조회 — get_all_preliminary_candidate_info","text":"","code":"get_all_preliminary_candidate_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_sigungu.html","id":null,"dir":"Reference","previous_headings":"","what":"전체 행정구역 목록 조회 — get_all_sigungu","title":"전체 행정구역 목록 조회 — get_all_sigungu","text":"전체 행정구역 목록 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_sigungu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"전체 행정구역 목록 조회 — get_all_sigungu","text":"","code":"get_all_sigungu(sgId, sdName = NULL)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_sigungu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"전체 행정구역 목록 조회 — get_all_sigungu","text":"sgId 선거ID sdName 시도명 (기본값: NULL)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_sigungu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"전체 행정구역 목록 조회 — get_all_sigungu","text":"모든 행정구역 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_sigungu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"전체 행정구역 목록 조회 — get_all_sigungu","text":"","code":"get_all_sigungu(sgId = \"20220309\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_voters.html","id":null,"dir":"Reference","previous_headings":"","what":"모든 선거인수 정보 조회 — get_all_voters","title":"모든 선거인수 정보 조회 — get_all_voters","text":"모든 선거인수 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_voters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"모든 선거인수 정보 조회 — get_all_voters","text":"","code":"get_all_voters(sgId, sgTypecode = NULL, sdName = NULL, wiwName = NULL)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_voters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"모든 선거인수 정보 조회 — get_all_voters","text":"sgId 선거ID sgTypecode 선거종류코드 (선거구별 조회 시 필요) sdName 시도명 (옵션) wiwName 구시군명 (옵션)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_voters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"모든 선거인수 정보 조회 — get_all_voters","text":"모든 선거인수 정보를 포함하는 리스트","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_voters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"모든 선거인수 정보 조회 — get_all_voters","text":"","code":"get_all_voters(sgId = \"20200415\", sgTypecode = \"2\", sdName = \"서울특별시\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_vote_info.html","id":null,"dir":"Reference","previous_headings":"","what":"모든 투표결과 조회 — get_all_vote_info","title":"모든 투표결과 조회 — get_all_vote_info","text":"모든 투표결과 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_vote_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"모든 투표결과 조회 — get_all_vote_info","text":"","code":"get_all_vote_info(sgId, sgTypecode, sdName = NULL, wiwName = NULL)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_vote_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"모든 투표결과 조회 — get_all_vote_info","text":"sgId 선거ID sgTypecode 선거종류코드 sdName 시도명 (옵션) wiwName 구시군명 (옵션)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_vote_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"모든 투표결과 조회 — get_all_vote_info","text":"모든 투표결과 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_vote_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"모든 투표결과 조회 — get_all_vote_info","text":"","code":"get_all_vote_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_winner_info.html","id":null,"dir":"Reference","previous_headings":"","what":"전체 당선인 정보 조회 — get_all_winner_info","title":"전체 당선인 정보 조회 — get_all_winner_info","text":"선거ID, 선거종류코드, 시도명, 선거구명을 입력받아 모든 페이지의 당선인 정보를 조회하는 함수","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_winner_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"전체 당선인 정보 조회 — get_all_winner_info","text":"","code":"get_all_winner_info(sgId, sgTypecode, sdName = NULL, sggName = NULL)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_winner_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"전체 당선인 정보 조회 — get_all_winner_info","text":"sgId 선거ID sgTypecode 선거종류코드 sdName 시도명 (옵션) sggName 선거구명 (옵션)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_winner_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"전체 당선인 정보 조회 — get_all_winner_info","text":"전체 당선인 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_all_winner_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"전체 당선인 정보 조회 — get_all_winner_info","text":"","code":"get_all_winner_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_candidate_info.html","id":null,"dir":"Reference","previous_headings":"","what":"후보자 정보 조회 — get_candidate_info","title":"후보자 정보 조회 — get_candidate_info","text":"후보자 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_candidate_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"후보자 정보 조회 — get_candidate_info","text":"","code":"get_candidate_info(   sgId,   sgTypecode,   sggName = NULL,   sdName = NULL,   pageNo = 1,   numOfRows = 10 )"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_candidate_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"후보자 정보 조회 — get_candidate_info","text":"sgId 선거ID sgTypecode 선거종류코드 sggName 선거구명 (옵션) sdName 시도명 (옵션) pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_candidate_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"후보자 정보 조회 — get_candidate_info","text":"후보자 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_candidate_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"후보자 정보 조회 — get_candidate_info","text":"","code":"get_candidate_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituencies.html","id":null,"dir":"Reference","previous_headings":"","what":"선거구 목록 조회 (단일 페이지) — get_constituencies","title":"선거구 목록 조회 (단일 페이지) — get_constituencies","text":"선거구 목록 조회 (단일 페이지)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"선거구 목록 조회 (단일 페이지) — get_constituencies","text":"","code":"get_constituencies(pageNo = 1, numOfRows = 10, sgId, sgTypecode)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"선거구 목록 조회 (단일 페이지) — get_constituencies","text":"pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 데이터 수 (기본값: 10) sgId 선거ID sgTypecode 선거종류코드","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"선거구 목록 조회 (단일 페이지) — get_constituencies","text":"선거구 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"선거구 목록 조회 (단일 페이지) — get_constituencies","text":"","code":"get_constituencies(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituency_voters.html","id":null,"dir":"Reference","previous_headings":"","what":"선거구별 선거인수 정보 조회 — get_constituency_voters","title":"선거구별 선거인수 정보 조회 — get_constituency_voters","text":"선거구별 선거인수 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituency_voters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"선거구별 선거인수 정보 조회 — get_constituency_voters","text":"","code":"get_constituency_voters(   sgId,   sgTypecode,   sdName = NULL,   wiwName = NULL,   pageNo = 1,   numOfRows = 10 )"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituency_voters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"선거구별 선거인수 정보 조회 — get_constituency_voters","text":"sgId 선거ID sgTypecode 선거종류코드 sdName 시도명 (옵션) wiwName 구시군명 (옵션) pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituency_voters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"선거구별 선거인수 정보 조회 — get_constituency_voters","text":"선거구별 선거인수 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_constituency_voters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"선거구별 선거인수 정보 조회 — get_constituency_voters","text":"","code":"get_constituency_voters(sgId = \"20200415\", sgTypecode = \"2\", sdName = \"서울특별시\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_count_info.html","id":null,"dir":"Reference","previous_headings":"","what":"개표결과 조회 — get_count_info","title":"개표결과 조회 — get_count_info","text":"개표결과 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_count_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"개표결과 조회 — get_count_info","text":"","code":"get_count_info(   sgId,   sgTypecode,   sggName = NULL,   sdName = NULL,   wiwName = NULL,   pageNo = 1,   numOfRows = 10 )"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_count_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"개표결과 조회 — get_count_info","text":"sgId 선거ID sgTypecode 선거종류코드 sggName 선거구명 (옵션) sdName 시도명 (옵션) wiwName 구시군명 (옵션) pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_count_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"개표결과 조회 — get_count_info","text":"개표결과 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_count_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"개표결과 조회 — get_count_info","text":"","code":"get_count_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_education_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"학력 목록 조회 (단일 페이지) — get_education_levels","title":"학력 목록 조회 (단일 페이지) — get_education_levels","text":"학력 목록 조회 (단일 페이지)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_education_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"학력 목록 조회 (단일 페이지) — get_education_levels","text":"","code":"get_education_levels(pageNo = 1, numOfRows = 10, sgId)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_education_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"학력 목록 조회 (단일 페이지) — get_education_levels","text":"pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 데이터 수 (기본값: 10) sgId 선거ID","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_education_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"학력 목록 조회 (단일 페이지) — get_education_levels","text":"학력 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_education_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"학력 목록 조회 (단일 페이지) — get_education_levels","text":"","code":"get_education_levels(sgId = \"20220309\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_elections.html","id":null,"dir":"Reference","previous_headings":"","what":"선거 목록 조회 (단일 페이지) — get_elections","title":"선거 목록 조회 (단일 페이지) — get_elections","text":"선거 목록 조회 (단일 페이지)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_elections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"선거 목록 조회 (단일 페이지) — get_elections","text":"","code":"get_elections(pageNo = 1, numOfRows = 10)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_elections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"선거 목록 조회 (단일 페이지) — get_elections","text":"pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 데이터 수 (기본값: 10)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_elections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"선거 목록 조회 (단일 페이지) — get_elections","text":"선거 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_elections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"선거 목록 조회 (단일 페이지) — get_elections","text":"","code":"get_elections() #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_emd_voters.html","id":null,"dir":"Reference","previous_headings":"","what":"읍면동별 선거인수 정보 조회 — get_emd_voters","title":"읍면동별 선거인수 정보 조회 — get_emd_voters","text":"읍면동별 선거인수 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_emd_voters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"읍면동별 선거인수 정보 조회 — get_emd_voters","text":"","code":"get_emd_voters(sgId, sdName, wiwName, pageNo = 1, numOfRows = 10)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_emd_voters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"읍면동별 선거인수 정보 조회 — get_emd_voters","text":"sgId 선거ID sdName 시도명 wiwName 구시군명 pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_emd_voters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"읍면동별 선거인수 정보 조회 — get_emd_voters","text":"읍면동별 선거인수 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_emd_voters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"읍면동별 선거인수 정보 조회 — get_emd_voters","text":"","code":"get_emd_voters(sgId = \"20200415\", sdName = \"서울특별시\", wiwName = \"종로구\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_occupations.html","id":null,"dir":"Reference","previous_headings":"","what":"직업 목록 조회 (단일 페이지) — get_occupations","title":"직업 목록 조회 (단일 페이지) — get_occupations","text":"직업 목록 조회 (단일 페이지)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_occupations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"직업 목록 조회 (단일 페이지) — get_occupations","text":"","code":"get_occupations(pageNo = 1, numOfRows = 10, sgId)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_occupations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"직업 목록 조회 (단일 페이지) — get_occupations","text":"pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 데이터 수 (기본값: 10) sgId 선거ID","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_occupations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"직업 목록 조회 (단일 페이지) — get_occupations","text":"직업 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_occupations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"직업 목록 조회 (단일 페이지) — get_occupations","text":"","code":"get_occupations(sgId = \"20220309\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_parties.html","id":null,"dir":"Reference","previous_headings":"","what":"정당 목록 조회 (단일 페이지) — get_parties","title":"정당 목록 조회 (단일 페이지) — get_parties","text":"정당 목록 조회 (단일 페이지)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_parties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"정당 목록 조회 (단일 페이지) — get_parties","text":"","code":"get_parties(pageNo = 1, numOfRows = 10, sgId)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_parties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"정당 목록 조회 (단일 페이지) — get_parties","text":"pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 데이터 수 (기본값: 10) sgId 선거ID","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_parties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"정당 목록 조회 (단일 페이지) — get_parties","text":"정당 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_parties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"정당 목록 조회 (단일 페이지) — get_parties","text":"","code":"get_parties(sgId = \"20220309\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_preliminary_candidate_info.html","id":null,"dir":"Reference","previous_headings":"","what":"예비후보자 정보 조회 — get_preliminary_candidate_info","title":"예비후보자 정보 조회 — get_preliminary_candidate_info","text":"예비후보자 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_preliminary_candidate_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"예비후보자 정보 조회 — get_preliminary_candidate_info","text":"","code":"get_preliminary_candidate_info(   sgId,   sgTypecode,   sggName = NULL,   sdName = NULL,   pageNo = 1,   numOfRows = 10 )"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_preliminary_candidate_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"예비후보자 정보 조회 — get_preliminary_candidate_info","text":"sgId 선거ID sgTypecode 선거종류코드 sggName 선거구명 (옵션) sdName 시도명 (옵션) pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_preliminary_candidate_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"예비후보자 정보 조회 — get_preliminary_candidate_info","text":"예비후보자 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_preliminary_candidate_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"예비후보자 정보 조회 — get_preliminary_candidate_info","text":"","code":"get_preliminary_candidate_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sido_voters.html","id":null,"dir":"Reference","previous_headings":"","what":"시도별 선거인수 정보 조회 — get_sido_voters","title":"시도별 선거인수 정보 조회 — get_sido_voters","text":"시도별 선거인수 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sido_voters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"시도별 선거인수 정보 조회 — get_sido_voters","text":"","code":"get_sido_voters(sgId, pageNo = 1, numOfRows = 10)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sido_voters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"시도별 선거인수 정보 조회 — get_sido_voters","text":"sgId 선거ID pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sido_voters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"시도별 선거인수 정보 조회 — get_sido_voters","text":"시도별 선거인수 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sido_voters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"시도별 선거인수 정보 조회 — get_sido_voters","text":"","code":"get_sido_voters(sgId = \"20200415\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu.html","id":null,"dir":"Reference","previous_headings":"","what":"행정구역 목록 조회 (단일 페이지) — get_sigungu","title":"행정구역 목록 조회 (단일 페이지) — get_sigungu","text":"행정구역 목록 조회 (단일 페이지)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"행정구역 목록 조회 (단일 페이지) — get_sigungu","text":"","code":"get_sigungu(pageNo = 1, numOfRows = 10, sgId, sdName = NULL)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"행정구역 목록 조회 (단일 페이지) — get_sigungu","text":"pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 데이터 수 (기본값: 10) sgId 선거ID sdName 시도명 (기본값: NULL)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"행정구역 목록 조회 (단일 페이지) — get_sigungu","text":"행정구역 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"행정구역 목록 조회 (단일 페이지) — get_sigungu","text":"","code":"get_sigungu(sgId = \"20220309\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu_voters.html","id":null,"dir":"Reference","previous_headings":"","what":"구시군별 선거인수 정보 조회 — get_sigungu_voters","title":"구시군별 선거인수 정보 조회 — get_sigungu_voters","text":"구시군별 선거인수 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu_voters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"구시군별 선거인수 정보 조회 — get_sigungu_voters","text":"","code":"get_sigungu_voters(sgId, sdName, pageNo = 1, numOfRows = 10)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu_voters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"구시군별 선거인수 정보 조회 — get_sigungu_voters","text":"sgId 선거ID sdName 시도명 pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu_voters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"구시군별 선거인수 정보 조회 — get_sigungu_voters","text":"구시군별 선거인수 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_sigungu_voters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"구시군별 선거인수 정보 조회 — get_sigungu_voters","text":"","code":"get_sigungu_voters(sgId = \"20200415\", sdName = \"서울특별시\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_vote_info.html","id":null,"dir":"Reference","previous_headings":"","what":"투표결과 조회 — get_vote_info","title":"투표결과 조회 — get_vote_info","text":"투표결과 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_vote_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"투표결과 조회 — get_vote_info","text":"","code":"get_vote_info(   sgId,   sgTypecode,   sdName = NULL,   wiwName = NULL,   pageNo = 1,   numOfRows = 10 )"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_vote_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"투표결과 조회 — get_vote_info","text":"sgId 선거ID sgTypecode 선거종류코드 sdName 시도명 (옵션) wiwName 구시군명 (옵션) pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_vote_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"투표결과 조회 — get_vote_info","text":"투표결과 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_vote_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"투표결과 조회 — get_vote_info","text":"","code":"get_vote_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_voting_district_voters.html","id":null,"dir":"Reference","previous_headings":"","what":"투표구별 선거인수 정보 조회 — get_voting_district_voters","title":"투표구별 선거인수 정보 조회 — get_voting_district_voters","text":"투표구별 선거인수 정보 조회","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_voting_district_voters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"투표구별 선거인수 정보 조회 — get_voting_district_voters","text":"","code":"get_voting_district_voters(sgId, sdName, wiwName, pageNo = 1, numOfRows = 10)"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_voting_district_voters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"투표구별 선거인수 정보 조회 — get_voting_district_voters","text":"sgId 선거ID sdName 시도명 wiwName 구시군명 pageNo 페이지 번호 (기본값: 1) numOfRows 페이지당 출력 개수 (기본값: 10, 최대값: 100)","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_voting_district_voters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"투표구별 선거인수 정보 조회 — get_voting_district_voters","text":"투표구별 선거인수 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_voting_district_voters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"투표구별 선거인수 정보 조회 — get_voting_district_voters","text":"","code":"get_voting_district_voters(sgId = \"20200415\", sdName = \"서울특별시\", wiwName = \"종로구\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_winner_info.html","id":null,"dir":"Reference","previous_headings":"","what":"당선인 정보 조회 — get_winner_info","title":"당선인 정보 조회 — get_winner_info","text":"선거ID, 선거종류코드, 시도명, 선거구명을 입력받아 당선인 관련 정보를 조회하는 함수","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_winner_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"당선인 정보 조회 — get_winner_info","text":"","code":"get_winner_info(   sgId,   sgTypecode,   sdName = NULL,   sggName = NULL,   pageNo = 1,   numOfRows = 10,   resultType = \"json\" )"},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_winner_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"당선인 정보 조회 — get_winner_info","text":"sgId 선거ID sgTypecode 선거종류코드 sdName 시도명 (옵션) sggName 선거구명 (옵션) pageNo 페이지 번호 (기본값: 1) numOfRows 목록 건수 (기본값: 10, 최대값: 100) resultType 데이터포맷 (기본값: \"json\", 다른 옵션: \"xml\")","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_winner_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"당선인 정보 조회 — get_winner_info","text":"당선인 정보 데이터프레임","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/get_winner_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"당선인 정보 조회 — get_winner_info","text":"","code":"get_winner_info(sgId = \"20220309\", sgTypecode = \"1\") #> Error in get_krvote2_key(): No service key set. Please use set_krvote2_key() to set your service key."},{"path":"https://ai-carpentry.github.io/krvote2/reference/set_krvote2_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the service key for the krvote2 package — set_krvote2_key","title":"Set the service key for the krvote2 package — set_krvote2_key","text":"Set service key krvote2 package","code":""},{"path":"https://ai-carpentry.github.io/krvote2/reference/set_krvote2_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the service key for the krvote2 package — set_krvote2_key","text":"","code":"set_krvote2_key(key)"}]
